
Showing logs for build [32mcb-kubecd-environment-bootv3-de-mz2nj-19[0m stage [32mrelease[0m and container [32mstep-credential-initializer-4zvgg[0m
{"level":"warn","ts":1587371662.3022532,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/0.8.0-**-support-backwards-incompats\" is not a valid GitHub commit ID"}
{"level":"info","ts":1587371662.3030014,"logger":"fallback-logger","caller":"creds-init/main.go:40","msg":"Credentials initialized."}

Showing logs for build [32mcb-kubecd-environment-bootv3-de-mz2nj-19[0m stage [32mrelease[0m and container [32mstep-working-dir-initializer-5pmxr[0m
{"level":"warn","ts":1587371663.2693005,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: open /var/run/ko/HEAD: no such file or directory"}
{"level":"info","ts":1587371663.2703536,"logger":"fallback-logger","caller":"bash/main.go:64","msg":"Successfully executed command \"sh -c mkdir -p /workspace/source\"; output "}

Showing logs for build [32mcb-kubecd-environment-bootv3-de-mz2nj-19[0m stage [32mrelease[0m and container [32mstep-place-tools[0m

Showing logs for build [32mcb-kubecd-environment-bootv3-de-mz2nj-19[0m stage [32mrelease[0m and container [32mstep-git-source-cb-kubecd-environment-bootv3-de-mz2nj-ft64b[0m
{"level":"warn","ts":1587371672.3678346,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/0.8.0-**-support-backwards-incompats\" is not a valid GitHub commit ID"}
{"level":"info","ts":1587371673.4145882,"logger":"fallback-logger","caller":"git/git.go:103","msg":"Successfully cloned https://github.com/cb-kubecd/environment-bootv3-dev.git @ v0.0.13 in path /workspace/source"}

Showing logs for build [32mcb-kubecd-environment-bootv3-de-mz2nj-19[0m stage [32mrelease[0m and container [32mstep-git-merge[0m
Using SHAs from PULL_REFS=master:bd0b68d81d1ff2e9b232613b0694771cbcda5c98
WARNING: no SHAs to merge, falling back to initial cloned commit

Showing logs for build [32mcb-kubecd-environment-bootv3-de-mz2nj-19[0m stage [32mrelease[0m and container [32mstep-verify-secrets[0m
Installing plugin helm version 3.2.0-rc.1 for command ** helm from https://get.helm.sh/helm-v3.2.0-rc.1-linux-amd64.tar.gz
created directory /secrets/**-boot
loaded Secrets from: local in namespace ** with Secret **-boot-secrets
exported Secrets to file: /secrets/**-boot/secrets.yaml

Showing logs for build [32mcb-kubecd-environment-bootv3-de-mz2nj-19[0m stage [32mrelease[0m and container [32mstep-validate-git[0m
Git configured for user: jenkins-x-bot and email jenkins-x@googlegroups.com

Showing logs for build [32mcb-kubecd-environment-bootv3-de-mz2nj-19[0m stage [32mrelease[0m and container [32mstep-verify-preinstall[0m
no need to reconnect to cluster
Cloning the Jenkins X versions repo https://github.com/jenkins-x/**r-versions.git with ref refs/heads/master to /builder/home/.**/jenkins-x-versions
Locking version stream https://github.com/jenkins-x/**r-versions.git to release v0.0.3. Jenkins X will use this release rather than master to resolve all versions from now on.
writing the following to the OWNERS file for the development environment repository:
approvers:
- jstrachan
- rawlingsj
- daveconde
reviewers:
- jstrachan
- rawlingsj
- daveconde
WARNING: TLS is not enabled so your webhooks will be called using HTTP. This means your webhook secret will be sent to your cluster in the clear. See https://jenkins-x.io/docs/getting-started/setup/boot/#ingress for more information
Verifying the kubernetes cluster before we try to boot Jenkins X in namespace: **
Trying to lazily create any missing resources to get the current cluster ready to boot Jenkins X
Verifying Ingress...
Clearing the domain 35.240.127.185.nip.io as when using auto-DNS domains we need to regenerate to ensure its always accurate in case the cluster or ingress service is recreated

Using namespace '**' from context named '' on server ''.

Verifying Storage...
WARNING: Your requirements have not enabled cloud storage for logs - we recommend enabling this for kubernetes provider gke
WARNING: Your requirements have not enabled cloud storage for reports - we recommend enabling this for kubernetes provider gke
WARNING: Your requirements have not enabled cloud storage for repository - we recommend enabling this for kubernetes provider gke
WARNING: Your requirements have not enabled cloud storage for backup - we recommend enabling this for kubernetes provider gke
Storage configuration looks good

Validating Kaniko secret in namespace **

verified there is a ConfigMap config in namespace **
verified there is a ConfigMap plugins in namespace **
Cluster looks good, you are ready to '** boot' now!


Showing logs for build [32mcb-kubecd-environment-bootv3-de-mz2nj-19[0m stage [32mrelease[0m and container [32mstep-generate-helmfile[0m

Showing logs for build [32mcb-kubecd-environment-bootv3-de-mz2nj-19[0m stage [32mrelease[0m and container [32mstep-helmfile-system-diff[0m
Adding repo stable https://kubernetes-charts.storage.googleapis.com
"stable" has been added to your repositories

Updating repo
Hang tight while we grab the latest from your chart repositories...
...Successfully got an update from the "stable" chart repository
Update Complete. âŽˆ Happy Helming!âŽˆ 

Comparing release=nginx-ingress, chart=stable/nginx-ingress

Showing logs for build [32mcb-kubecd-environment-bootv3-de-mz2nj-19[0m stage [32mrelease[0m and container [32mstep-helmfile-system[0m
Adding repo stable https://kubernetes-charts.storage.googleapis.com
"stable" has been added to your repositories

Updating repo
Hang tight while we grab the latest from your chart repositories...
...Successfully got an update from the "stable" chart repository
Update Complete. âŽˆ Happy Helming!âŽˆ 

Affected releases are:
  nginx-ingress (stable/nginx-ingress) UPDATED

Upgrading release=nginx-ingress, chart=stable/nginx-ingress
Release "nginx-ingress" has been upgraded. Happy Helming!
NAME: nginx-ingress
LAST DEPLOYED: Mon Apr 20 08:34:57 2020
NAMESPACE: nginx
STATUS: deployed
REVISION: 31
TEST SUITE: None
NOTES:
The nginx-ingress controller has been installed.
It may take a few minutes for the LoadBalancer IP to be available.
You can watch the status by running 'kubectl --namespace nginx get services -o wide -w nginx-ingress-controller'

An example Ingress that makes use of the controller:

  apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubernetes.io/ingress.class: nginx
    name: example
    namespace: foo
  spec:
    rules:
      - host: www.example.com
        http:
          paths:
            - backend:
                serviceName: exampleService
                servicePort: 80
              path: /
    # This section is only required if TLS is to be enabled for the Ingress
    tls:
        - hosts:
            - www.example.com
          secretName: example-tls

If TLS is enabled for the Ingress, a Secret containing the certificate and key must also be provided:

  apiVersion: v1
  kind: Secret
  metadata:
    name: example-tls
    namespace: foo
  data:
    tls.crt: <base64 encoded cert>
    tls.key: <base64 encoded key>
  type: kubernetes.io/tls

Listing releases matching ^nginx-ingress$
nginx-ingress	nginx    	31      	2020-04-20 08:34:57.111151697 +0000 UTC	deployed	nginx-ingress-1.34.2	0.30.0     


UPDATED RELEASES:
NAME            CHART                  VERSION
nginx-ingress   stable/nginx-ingress    1.34.2


Showing logs for build [32mcb-kubecd-environment-bootv3-de-mz2nj-19[0m stage [32mrelease[0m and container [32mstep-verify-ingress[0m
Waiting to find the external host name of the ingress controller Service in namespace nginx with name nginx-ingress-controller
No domain flag provided so using default 35.240.127.185.nip.io to generate Ingress rules
defaulting the domain to 35.240.127.185.nip.io and modified /workspace/source/**-requirements.yml

Showing logs for build [32mcb-kubecd-environment-bootv3-de-mz2nj-19[0m stage [32mrelease[0m and container [32mstep-helm-annotate-source-repositories[0m
kubectl controls the Kubernetes cluster manager.

 Find more information at: https://kubernetes.io/docs/reference/kubectl/overview/

Basic Commands (Beginner):
  create         Create a resource from a file or from stdin.
  expose         Take a replication controller, service, deployment or pod and expose it as a new Kubernetes Service
  run            Run a particular image on the cluster
  set            Set specific features on objects

Basic Commands (Intermediate):
  explain        Documentation of resources
  get            Display one or many resources
  edit           Edit a resource on the server
  delete         Delete resources by filenames, stdin, resources and names, or by resources and label selector

Deploy Commands:
  rollout        Manage the rollout of a resource
  scale          Set a new size for a Deployment, ReplicaSet, Replication Controller, or Job
  autoscale      Auto-scale a Deployment, ReplicaSet, or ReplicationController

Cluster Management Commands:
  certificate    Modify certificate resources.
  cluster-info   Display cluster info
  top            Display Resource (CPU/Memory/Storage) usage.
  cordon         Mark node as unschedulable
  uncordon       Mark node as schedulable
  drain          Drain node in preparation for maintenance
  taint          Update the taints on one or more nodes

Troubleshooting and Debugging Commands:
  describe       Show details of a specific resource or group of resources
  logs           Print the logs for a container in a pod
  attach         Attach to a running container
  exec           Execute a command in a container
  port-forward   Forward one or more local ports to a pod
  proxy          Run a proxy to the Kubernetes API server
  cp             Copy files and directories to and from containers.
  auth           Inspect authorization

Advanced Commands:
  diff           Diff live version against would-be applied version
  apply          Apply a configuration to a resource by filename or stdin
  patch          Update field(s) of a resource using strategic merge patch
  replace        Replace a resource by filename or stdin
  wait           Experimental: Wait for a specific condition on one or many resources.
  convert        Convert config files between different API versions
  kustomize      Build a kustomization target from a directory or a remote url.

Settings Commands:
  label          Update the labels on a resource
  annotate       Update the annotations on a resource
  completion     Output shell completion code for the specified shell (bash or zsh)

Other Commands:
  api-resources  Print the supported API resources on the server
  api-versions   Print the supported API versions on the server, in the form of "group/version"
  config         Modify kubeconfig files
  plugin         Provides utilities for interacting with plugins.
  version        Print the client and server version information

Usage:
  kubectl [flags] [options]

Use "kubectl <command> --help" for more information about a given command.
Use "kubectl options" for a list of global command-line options (applies to all commands).
--overwrite is false but found the following declared annotation(s): 'meta.helm.sh/release-namespace' already has a value (**)
--overwrite is false but found the following declared annotation(s): 'meta.helm.sh/release-namespace' already has a value (**)
--overwrite is false but found the following declared annotation(s): 'meta.helm.sh/release-namespace' already has a value (**)
'app.kubernetes.io/managed-by' already has a value (Helm), and --overwrite is false
'app.kubernetes.io/managed-by' already has a value (Helm), and --overwrite is false
'app.kubernetes.io/managed-by' already has a value (Helm), and --overwrite is false
[31m
Pipeline failed on stage 'release' : container 'step-helm-annotate-source-repositories'. The execution of the pipeline has stopped.[0m
